name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      timeout-minutes: 15
      
    - name: Run linter
      run: npm run lint
      timeout-minutes: 10
      
    - name: Run type check
      run: npm run type-check
      timeout-minutes: 10
      
    - name: Run unit tests
      run: npm run test
      timeout-minutes: 10
      env:
        NODE_OPTIONS: '--max_old_space_size=6144'
        CI: true
      
    - name: Build application
      run: npm run build
      timeout-minutes: 20
      env:
        NODE_OPTIONS: '--max_old_space_size=6144'
        CI: true
        NEXT_TELEMETRY_DISABLED: 1
        
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      timeout-minutes: 15
      
    - name: Run E2E tests
      run: npm run test:e2e
      timeout-minutes: 15
      env:
        CI: true
        NODE_OPTIONS: '--max_old_space_size=4096'
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: false # Disabled until Vercel secrets are configured
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      timeout-minutes: 15
      
    - name: Build application
      run: npm run build
      timeout-minutes: 20
      env:
        NODE_OPTIONS: '--max_old_space_size=6144'
        CI: true
        NEXT_TELEMETRY_DISABLED: 1
      
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: false # Disabled until Vercel secrets are configured
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      timeout-minutes: 15
      
    - name: Build application
      run: npm run build
      timeout-minutes: 20
      env:
        NODE_OPTIONS: '--max_old_space_size=6144'
        CI: true
        NEXT_TELEMETRY_DISABLED: 1
      
    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod' 